#!/usr/bin/env bash

set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

usage() {
  cat << EOF
Usage: $(basename "${BASH_SOURCE[0]}") [-h] [-v] [-l] repository

Archive Clone: Creates a bare clone of a repository and removes remote associations.
Perfect for archiving work projects into personal storage while maintaining history.

Available options:
-h, --help      Print this help and exit
-v, --verbose   Print script debug info
-l, --location  Location of the bare repo (default: .bare)
EOF
  exit
}

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
}

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' BLUE='\033[0;34m' YELLOW='\033[1;33m'
  else
    NOFORMAT='' RED='' GREEN='' BLUE='' YELLOW=''
  fi
}

msg() {
  echo >&2 -e "${1-}"
}

die() {
  local msg=$1
  local code=${2-1}
  msg "$msg"
  exit "$code"
}

remove_remote_refs() {
  local location=$1
  msg "${BLUE}Removing remote references...${NOFORMAT}"
  pushd "$location" > /dev/null
  
  # Remove origin remote
  git remote remove origin 2>/dev/null || true
  
  # Remove remote-tracking branches
  git for-each-ref --format="%(refname)" refs/remotes/ | while read ref; do
    git update-ref -d "$ref"
  done
  
  # Clean up any remaining remote configs
  git config --remove-section remote.origin 2>/dev/null || true
  
  popd > /dev/null
  msg "${GREEN}Remote references removed${NOFORMAT}"
}

parse_params() {
  location='.bare'

  while :; do
    case "${1-}" in
    -h | --help) usage ;;
    -v | --verbose) set -x ;;
    --no-color) NO_COLOR=1 ;;
    -l | --location)
        location="${2-}" 
        shift
        ;;
    -?*) die "Unknown option: $1" ;;
    *) break ;;
    esac
    shift
  done

  args=("$@")
  [[ ${#args[@]} -eq 0 ]] && die "Missing repository argument"
  return 0
}

parse_params "$@"
setup_colors

msg "${YELLOW}Creating bare clone in $location...${NOFORMAT}"
git clone --bare "${args[@]}" "$location"

msg "${YELLOW}Setting up git configuration...${NOFORMAT}"
echo "gitdir: ./$location" > .git

# Remove remote references
remove_remote_refs "$location"

msg "${GREEN}Archive clone complete. Repository is now disconnected from origin.${NOFORMAT}" 